rec_source <- trimws(as.character(strsplit(each_file, "_")[[1]][1]))
fileone$received_source <- rec_source
### add in "regular" manifest columns
fileone$flag <- NA
### re-arrange variables
fileone <- fileone %>% select(position, sample_id, subject_id, coll_date, flag, received_date, received_source, SiteName)
cdc_ivy_storage <- rbind(cdc_ivy_storage, fileone)
}
### write out full ivy set
write.csv(full_ivy, paste0(cdcivy_manifest_fp, "/Full_IVY_Set/IVY_sample_full_manifest_list.csv"), row.names = FALSE, na = "")
### add onto main manifest file HERE
manifest_storage$SiteName <- NA
manifest_storage <- rbind(manifest_storage, cdc_ivy_storage)
################################################################################
# check for sample_id/subject_id/coll_date duplicates
# count of unique sample_id, subject_id, coll_date combinations
unique_ids <- nrow(manifest_storage %>% select(sample_id, subject_id, coll_date) %>% distinct())
if (unique_ids != nrow(manifest_storage)){
# identify duplicates
dupes <- manifest_storage %>% group_by(sample_id, subject_id, coll_date) %>% summarize(count_unique = length(sample_id))
# merge with the original file
mfs <- merge(manifest_storage, dupes, by = c("sample_id", "subject_id", "coll_date"), all.x = TRUE)
# filter that down to a set of duplicates, to use in the output report
duplicate_ssc <- filter(mfs, count_unique != 1)
### alter flag column in original file to note the duplication
manifest_storage$flag <- ifelse(is.na(manifest_storage$flag), "", manifest_storage$flag)
manifest_storage$flag <- ifelse(manifest_storage$sample_id %in% duplicate_ssc$sample_id & manifest_storage$subject_id %in% duplicate_ssc$subject_id
& manifest_storage$coll_date %in% duplicate_ssc$coll_date,
paste0(manifest_storage$flag, " ", "Duplicate Sample - Subject - Collection"), manifest_storage$flag)
manifest_storage$flag <- trimws(manifest_storage$flag)
manifest_storage$flag <- ifelse(manifest_storage$flag == "", NA, manifest_storage$flag)
#duplicate_ssc <- rbind(duplicate_ssc, duplicate_ssc2)
}
# add a column to check length of subject_id
manifest_storage$subject_id_length <- nchar(manifest_storage$subject_id)
manifest_storage <- subject_id_length_QA(manifest_storage, "CBR")
manifest_storage <- subject_id_length_QA(manifest_storage, "ED_IDNOW")
manifest_storage <- subject_id_length_QA(manifest_storage, "CSTP")
### write compiled manifest file out
### in this case, we'll always overwrite the old file, if it does exist
write.csv(manifest_storage, paste0(outputLOC, "/sample_full_manifest_list.csv"), row.names = FALSE, na = "")
### create date formatting
today <- current_date_string()
wb <- loadWorkbook(paste0(outputLOC, "/manifest_output_report_template.xlsx"))
writeData(wb, today, sheet = "SUMMARY", startRow = 1, startCol = 2)
#writeData(wb, each_file_row_count, sheet = "SUMMARY", startRow = 3, startCol = 2)
writeData(wb, nrow(manifest_storage), sheet = "SUMMARY", startRow = 4, startCol = 2)
writeData(wb, ncol(manifest_storage), sheet = "SUMMARY", startRow = 6, startCol = 2)
if (exists("duplicate_ssc")){
writeData(wb, duplicate_ssc, sheet = "DUPLICATES",
startRow = 1, startCol = 1)
}
zeros <- rbind(filter(manifest_storage, grepl("MRN < 9", flag)), filter(manifest_storage, grepl("UMID < 8", flag)))
writeData(wb, zeros, sheet = "RESTORE_ZEROS",
startRow = 1, startCol = 1)
miss_dats <- filter(manifest_storage, grepl("Missing Date", flag))
writeData(wb, miss_dats, sheet = "MISSING_DATES", startRow = 1, startCol = 1)
saveWorkbook(wb, paste0(outputLOC, "/manifest_output_report_", today, ".xlsx"), overwrite = TRUE)
outputLOC
today
View(look1)
################################################################################
#       Creation of CDC IVY Upload Dataset for COVID-19 Genetic Sampling       #
#                         Last Updated: 05/18/2021                             #
#                 Code Edited By: Julie (Jules) Gilbert                        #
################################################################################
library(tidyverse)
library(lubridate)
################################################################################
starting_path <- "C:/Users/juliegil/Dropbox (University of Michigan)/MED-LauringLab/"
outputLOC <- paste0(starting_path, "SequenceSampleMetadata/FinalSummary/CDC_IVY_UPLOADS/")
seq_list <- read.csv(paste0(starting_path, "SequenceSampleMetadata/FinalSummary/full_compiled_data.csv"), colClasses = "character")
################################################################################
# for sequencing
seq_list2 <- filter(seq_list, PlateNumber == "26")
write.csv(seq_list2, "C:/Users/juliegil/Dropbox (University of Michigan)/MED-LauringLab/ProcessedGenomes/20210519_Nanopore_Run_26/20210519_Nanopore_Run_26.meta.csv", row.names = FALSE, na = "")
library(tidyverse)
library(lubridate)
library(withr)
################################################################################
#                 Component Files - Upload and Data Checks                     #
################################################################################
# manifest file path
manifest_fp <- paste0(starting_path, "SequenceSampleMetadata/Manifests/ManifestsComplete")
# platemap file path
starting_path <- "C:/Users/juliegil/Dropbox (University of Michigan)/MED-LauringLab/"
code_path <- "C:/Users/juliegil/Documents/UofM_Work/SequenceCompilationCode/"
################################################################################
source(paste0(code_path, "pipeline_functions.R"))
################################################################################
source(paste0(code_path, "manifest_code.R"))
source(paste0(code_path, "plate_map_code.R"))
source(paste0(code_path, "pangolin_code.R"))
source(paste0(code_path, "nextclade_code.R"))
source(paste0(code_path, "gisaid_code.R"))
source(paste0(code_path, "compile_components_code.R"))
################################################################################
#                    GISAID File Upload Format Creation                        #
#                         Last Updated: 05/27/2021                             #
#                 Code Edited By: Julie (Jules) Gilbert                        #
################################################################################
library(tidyverse)
library(openxlsx)
################################################################################
# just need some of these functions
code_path <- "C:/Users/juliegil/Documents/UofM_Work/SequenceCompilationCode/"
source(paste0(code_path, "pipeline_functions.R"))
################################################################################
### fill in some info manually
runtech <- "Nanopore" # nanopore or illumina, will match "PlatePlatform" options
runnum <- "26" # number, will match "PlateNumber" options
################################################################################
# run comparison code file first, to be sure full_compiled_data matches the one
# in the secret folder
source("C:/Users/juliegil/Documents/UofM_Work/SequenceCompilationCode/OutsidePipeline/checking_compiled_files.R")
# set starting path
starting_path <- "C:/Users/juliegil/Dropbox (University of Michigan)/MED-LauringLab/"
# set output path for gisaid upload file
# will need to add appropriate folder name at the end of this path
outputLOC <- "C:/Users/juliegil/Dropbox (University of Michigan)/MED-LauringLab/GISAID_Uploads/upload_20210519_nanopore_run_26/"
################################################################################
# read in full compiled pile
finalfileLOC <- paste0(starting_path, "SequenceSampleMetadata/FinalSummary")
final_file <- read.csv(paste0(finalfileLOC, "/full_compiled_data.csv"), colClasses = "character")
# only keep rows with completeness > 90%
ff <- filter(final_file, as.numeric(nextclade_completeness) >= 90)
# select run of choice
ff <- filter(ff, PlatePlatform == runtech & PlateNumber == runnum)
#table(final_file$PlatePlatform, final_file$PlateNumber, useNA = "always")
################################################################################
# need to compare to complete GISAID file, to avoid submitting duplicate sequences
################################################################################
# enter GISAID username here
ff$Submitter <- "juliegil"
# create FASTA filename string
ff$FASTAfilename <- paste0(ff$PlateName, ".all.consensus.final.gisaid.fasta")
### constants
ff$Type <- "betacoronavirus"
ff$Passage <- "Original"
### create location from state collection location
ff <- separate(data = ff, col = SiteName, sep = "\\_", into = c("Site", "StateAbbrev"))
ff$State <- state.name[match(ff$StateAbbrev,state.abb)]
ff <- ff %>% mutate(Location = case_when(received_source == "CDCIVY" ~ paste0("North America / USA / ", State),
T ~ "North America / USA / Michigan"))
# create virus name
# hCoV-19/USA/MI-UM-10037140915/2020
# hCoV-19/USA/MA-IVY-ZZX9KKEV/2021
ff <- ff %>% mutate(VirusName = case_when(received_source == "CDCIVY" ~ paste0("hCoV-19/USA/", StateAbbrev, "-IVY-", sample_id, "/", substr(coll_date, 1, 4)),
T ~ paste0("hCoV-19/USA/MI-UM-", sample_id, "/", substr(coll_date, 1, 4))))
### constants
ff$AdditionalLoc <- ""
ff$Host <- "Human"
ff$AdditionalHost <- ""
ff$Gender <- "unknown"
ff$Age <- "unknown"
ff$Status <- "unknown"
ff$SpecimenSource <- "unknown"
ff$Outbreak <- ""
ff$lastVaccinated <- ""
ff$Treatment <- ""
# Oxford Nanopore, Illumina MiSeq
ff$SequencingTechnology <- ifelse(ff$PlatePlatform == "Nanopore", "Oxford Nanopore",
ifelse(ff$PlatePlatform == "Illumina", "Illumina MiSeq", "Unknown"))
unknown_tech <- filter(ff, SequencingTechnology == "Unknown")
if (nrow(unknown_tech) != 0){
stop("Check Sequencing Technology options.")
}
### Assembly Method
ff$AssemblyMethod <- ifelse(ff$PlatePlatform == "Nanopore", "ARTIC Network pipeline",
ifelse(ff$PlatePlatform == "Illumina", "BWA-MEM, iVar", "Unknown"))
unknown_assembly <- filter(ff, AssemblyMethod == "Unknown")
if (nrow(unknown_assembly) != 0){
stop("Check Assembly Method options.")
}
### Coverage
ff$Coverage <- ""
### Originating Lab
ff <- ff %>% mutate(originlab = case_when(received_source == "CDCIVY" ~ "IVY3 Central Lab, Vanderbilt University Medical Center",
T ~ "University of Michigan Clinical Microbiology Laboratory"),
originlabaddress = case_when(received_source == "CDCIVY" ~ "Medical Center North D7240, 1161 21st Ave. S., Nashville, TN, USA",
T ~ "2800 Plymouth Rd, Ann Arbor, MI, USA"))
ff$originlabsampleid <- ""
### submitting Lab
ff$submitlab <- "Lauring Lab, University of Michigan, Department of Microbiology and Immunology"
ff$submitlabaddress <- "1150 W. Medical Center Dr. MSRB1, Ann Arbor, MI, USA"
ff$submitlabsampleid <- ""
### Authors
ff$authors <- "Gilbert"
ff$comment <- ""
ff$commenticon <- ""
################################################################################
### write out VirusName + sample_id crosswalk for use in making
# .all.consensus.final.gisaid.fasta
ff_crosswalk <- ff %>% select(sample_id, VirusName)
write.csv(ff_crosswalk, paste0(starting_path, "/ProcessedGenomes/20210519_Nanopore_Run_26/20210519_Nanopore_Run_26.forgisaid.meta.csv"), row.names = FALSE, na = "")
## select variables
ff_writeout <- ff %>% select(Submitter, FASTAfilename, VirusName,Type, Passage,  coll_date, Location,
AdditionalLoc, Host, AdditionalHost, Gender, Age, Status,
SpecimenSource, Outbreak, lastVaccinated, Treatment, SequencingTechnology,
AssemblyMethod, Coverage, originlab, originlabaddress, originlabsampleid,
submitlab, submitlabaddress, submitlabsampleid, authors,
comment, commenticon)
ff_writeout <- ff_writeout %>% distinct()
## gisaid upload file name
today <- current_date_string()
gufn <- paste0(today, "_Lauring_gisaid_upload_metadata_run_", runnum)
## write to excel file (follow format)
wb <- loadWorkbook(paste0(starting_path, "/SequenceSampleMetadata/SequenceOutcomes/gisaid/GISAID_UPLOAD_TEMPLATE.xlsx"))
# fill in the submissions tab with built data frame
writeData(wb, ff_writeout, sheet = "Submissions", startRow = 3, startCol = 1, colNames = FALSE)
saveWorkbook(wb, paste0(outputLOC, gufn, ".xlsx"), overwrite = TRUE)
pops <- read.csv("C:/Users/juliegil/Box Sync/COVID Response Modeling/Jules/YOUTHS/census co sex age.csv")
merccw <- read.csv("C:/Users/juliegil/Box Sync/COVID Response Modeling/Data - MDHHS/standard_files/merc_region_county_crosswalk_withDetCity.csv")
merccw$County.Name <- ifelse(merccw$County.Name == "Detroit City", "Detroit", merccw$County.Name)
all_pop <- merge(pops, merccw, by.x = c("county_name"), by.y = c("County.Name"), all = TRUE)
all_pop <- filter(all_pop, Age_Group == "under 12 years") %>% group_by(MERC.Region.Name) %>% summarize(population_under_12 = sum(population, na.rm = TRUE))
all_pop <- rbind(all_pop, c("Michigan", sum(all_pop$population_under_12)))
deaths <- read.csv("C:/Users/juliegil/Box Sync/COVID Response Modeling/Jules/YOUTHS/Micumdeath_dateOfDeath.csv")
cases <- read.csv("C:/Users/juliegil/Box Sync/COVID Response Modeling/Jules/YOUTHS/Micuminc_conf_prob_onset.csv")
hospital_peds <- read.csv("C:/Users/juliegil/Box Sync/COVID Response Modeling/Jules/YOUTHS/pediatric_hospitalized.csv")
################################################################################
cases_melt <- melt(cases, id.vars = c("Date"))
cases_NEW <- cases_melt %>%
group_by(variable) %>%
arrange(as_date(Date)) %>%
mutate(diff = value - lag(value, default = first(value)),
sevendaysum = zoo::rollsumr(diff, k=7, fill = NA),
sevendayavg = round(sevendaysum/7, 1))
View(cases_NEW)
ggplot(filter(cases_NEW, variable == "Total"), aes(x = as_date(Date), y = diff)) +
geom_bar(stat = "identity") +
labs(title = "New COVID-19 Cases per Day in Individuals < 12 Years Old",
subtitle = "State of Michigan",
x = "Date",
y = "Case Count") +
theme_bw()
#ggsave("C:/Users/juliegil/Box Sync/COVID Response Modeling/Jules/YOUTHS/chart_newcases_michigan.png", width = 12, height = 10, units = "in")
deaths_melt <- melt(deaths, id.vars = c("Date"))
deaths_NEW <- deaths_melt %>%
group_by(variable) %>%
arrange(as_date(Date)) %>%
mutate(diff = value - lag(value, default = first(value)),
sevendaysum = zoo::rollsumr(diff, k=7, fill = NA),
sevendayavg = round(sevendaysum/7, 1))
ggplot(filter(deaths_NEW, variable == "Total"), aes(x = as_date(Date), y = diff)) +
geom_bar(stat = "identity") +
labs(title = "New COVID-19 Deaths per Day in Individuals < 12 Years Old",
subtitle = "State of Michigan",
x = "Date",
y = "Death Count") +
theme_bw()
#ggsave("C:/Users/juliegil/Box Sync/COVID Response Modeling/Jules/YOUTHS/chart_newdeaths_michigan.png", width = 12, height = 10, units = "in")
################################################################################
hospital_peds <- hospital_peds %>% group_by(MERC.Region.Number) %>%
arrange(as_date(DATE)) %>% mutate(sevendaysum = zoo::rollsumr(pediatric_covid, k=7, fill = NA),
sevendayavg = round(sevendaysum/7, 1))
ggplot(filter(hospital_peds, MERC.Region.Number == 99), aes(x = as_date(DATE), y = pediatric_covid)) +
geom_bar(stat = "identity") +
labs(title = "Reported COVID-19 Hospitalizations per Day (Pediatrics)",
subtitle = "State of Michigan",
x = "Date",
y = "Hospitalized Count") +
theme_bw()
#ggsave("C:/Users/juliegil/Box Sync/COVID Response Modeling/Jules/YOUTHS/chart_hospitalized_pediatrics_michigan.png", width = 12, height = 10, units = "in")
################################################################################
deaths_NEW_recent <- filter(deaths_NEW, as_date(Date) == max(as_date(deaths_NEW$Date)) - 7) %>% select(Date, variable, sevendayavg)
colnames(deaths_NEW_recent) <- c("Date", "Region", "Deaths_7dayavg")
deaths_NEW_recent$Region <- as.character(deaths_NEW_recent$Region)
cases_NEW_recent <- filter(cases_NEW, as_date(Date) == max(as_date(cases_NEW$Date)) - 7) %>% select(Date, variable, sevendayavg, value)
colnames(cases_NEW_recent) <- c("Date", "Region", "Cases_7dayavg")
cases_NEW_recent$Region <- as.character(cases_NEW_recent$Region)
View(cases_NEW_recent)
colnames(cases_NEW_recent) <- c("Date", "Region", "Cases_7dayavg", "Cases_Total")
cases_NEW_recent$Region <- as.character(cases_NEW_recent$Region)
hospital_peds_recent <- filter(hospital_peds, as_date(DATE) == max(as_date(hospital_peds$DATE))) %>% select(DATE, MERC.Region.Number, sevendayavg)
colnames(hospital_peds_recent) <- c("Date", "Region", "Hospital_7dayavg")
hospital_peds_recent <- hospital_peds_recent %>% mutate(Region2 = case_when(Region == 1 ~ "MERC.1",
Region == 2 ~ "MERC.2",
Region == 3 ~ "MERC.3",
Region == 4 ~ "MERC.4",
Region == 5 ~ "MERC.5",
Region == 6 ~ "MERC.6",
Region == 7 ~ "MERC.7",
Region == 8 ~ "MERC.8",
Region == 99 ~ "Total",
T ~ ""))
workset <- merge(cases_NEW_recent, deaths_NEW_recent, by = c("Date", "Region"))
workset <- merge(workset, hospital_peds_recent, by.x = c("Region"), by.y = c("Region2"), all = TRUE)
workset <- workset %>% select(Region.y, Region, Cases_Total, Cases_7dayavg, Deaths_7dayavg, Hospital_7dayavg) %>%
mutate(Region = case_when(Region == "MERC.1" ~ "Detroit",
Region == "MERC.2" ~ "Grand Rapids",
Region == "MERC.3" ~ "Kalamazoo",
Region == "MERC.4" ~ "Saginaw",
Region == "MERC.5" ~ "Lansing",
Region == "MERC.6" ~ "Traverse City",
Region == "MERC.7" ~ "Jackson",
Region == "MERC.8" ~ "Upper Peninsula",
Region == "Total" ~ "Michigan",
T ~ "")) %>% arrange(Region.y)
workset2 <- merge(workset, all_pop, by.x = c("Region"), by.y = c("MERC.Region.Name"))
workset2$Cases_7dayavg2 <- (as.numeric(workset2$Cases_7dayavg) / as.numeric(workset2$population_under_12)) * 1000000
workset2 <- workset2 %>% select(Region.y, Region, population_under_12, Cases_7dayavg, Cases_7dayavg2, Hospital_7dayavg, Deaths_7dayavg) %>% arrange(Region.y)
View(workset2)
workset2 <- merge(workset, all_pop, by.x = c("Region"), by.y = c("MERC.Region.Name"))
workset2$Cases_7dayavg2 <- (as.numeric(workset2$Cases_7dayavg) / as.numeric(workset2$population_under_12)) * 1000000
workset2 <- workset2 %>% select(Region.y, Region, population_under_12, Cases_Total, Cases_7dayavg, Cases_7dayavg2, Hospital_7dayavg, Deaths_7dayavg) %>% arrange(Region.y)
# Load the libraries
library(data.table)
library(dplyr)
library(formattable)
library(tidyr)
library(htmltools)
library(webshot)
# Set custom colors
E = "#6B1568"
D = "#8A419E"
C = "#8D6CB0"
B = "#8B96C9"
A = "#A0BDDC"
Low = "#BED4E6"
# renames the columns properly
names(workset2) = c(" ", "Region", "Population (<12 yrs)", "Cumulative Case Count (<12 yrs)", "7-day Average Number of Daily Cases (<12 yrs)", "7-day Average Number of Daily Cases (<12 yrs) per Million", "7-day Average Number of Daily Pediatric Hospitalizations", "7-day Average Number of Daily Deaths (<12 yrs)")
text_cases.color <- function(z){
if(z >= 40){return("white")}
else {return("black")}
}
cases_abs.color <- function(z){ # Cases per million per day
if(is.na(z)){return("lightgrey")}
else if(as.numeric(z) >= 150){return(E)}
else if(as.numeric(z) >= 70){return(D)}
else if(as.numeric(z) >= 40){return(C)}
else if(as.numeric(z) >= 20){return(B)}
else if(as.numeric(z) >= 7){return(A)}
else {return(Low)}
}
# Format table - at this point, needs to be screenshotted...no easy way to export
# a formattable table to an image for some reason
t<-formattable(workset2,
align = "c",
list('MERC region' = formatter(
"span", style = ~ style(color = "grey",font.weight = "bold")),
"7-day Average Number of Daily Cases (<12 yrs) per Million" = formatter(
"span", style = x ~ style(display = "block",
color = sapply(x, text_cases.color),
"border-radius" = "4px",
"padding-right" = "4px",
"background-color" = sapply(x, cases_abs.color))),
"7-day Average Number of Daily Pediatric Hospitalizations" = formatter(
"span", style = x ~ style(display = "block",
color = sapply(x, text_cases.color),
"border-radius" = "4px",
"padding-right" = "4px",
"background-color" = sapply(x, cases_abs.color))),
"7-day Average Number of Daily Deaths (<12 yrs)" = formatter(
"span", style = x ~ style(display = "block",
color = sapply(x, text_cases.color),
"border-radius" = "4px",
"padding-right" = "4px",
"background-color" = sapply(x, cases_abs.color)))
)
)
t
export_formattable <- function(f, file, width = "100%", height = NULL,
background = "white", delay = 0.2){
w <- as.htmlwidget(f, width = width, height = height)
path <- html_print(w, background = background, viewer = NULL)
url <- paste0("file:///", gsub("\\\\", "/", normalizePath(path)))
webshot(url,
file = file,
selector = ".formattable_widget",
delay = delay)
}
#export_formattable(t,paste0("C:/Users/juliegil/Documents/UofM_Work/", format(as.Date(dataDate),"%b%d"),"table_conf_prob.png"),width = "1500px")
export_formattable(t,"C:/Users/juliegil/Box Sync/COVID Response Modeling/Jules/YOUTHS/peds_card.png",width = "900px")
########################
################################################################################
#       Creation of CDC IVY Upload Dataset for COVID-19 Genetic Sampling       #
#                         Last Updated: 05/18/2021                             #
#                 Code Edited By: Julie (Jules) Gilbert                        #
################################################################################
library(tidyverse)
library(lubridate)
################################################################################
starting_path <- "C:/Users/juliegil/Dropbox (University of Michigan)/MED-LauringLab/"
outputLOC <- paste0(starting_path, "SequenceSampleMetadata/FinalSummary/CDC_IVY_UPLOADS/")
seq_list <- read.csv(paste0(starting_path, "SequenceSampleMetadata/FinalSummary/full_compiled_data.csv"), colClasses = "character")
################################################################################
# for sequencing
#seq_list2 <- filter(seq_list, PlateNumber == "26")
#write.csv(seq_list2, "C:/Users/juliegil/Dropbox (University of Michigan)/MED-LauringLab/ProcessedGenomes/20210519_Nanopore_Run_26/20210519_Nanopore_Run_26.meta.csv", row.names = FALSE, na = "")
seq_list <- seq_list %>% select(sample_id, subject_id, coll_date,
flag, received_source, SiteName, SampleBarcode,
PlateDate, PlatePlatform, PlateNumber,
pangolin_lineage, pangolin_probability, pangolin_status,
pangolin_note, nextclade_clade, nextclade_totalMissing,
nextclade_completeness, gisaid_strain, gisaid_epi_isl,
received_date, position, subject_id_length,
PlateName, PlatePosition, SampleSourceLocation,
pangoLEARN_version, pangolin_conflict, pango_version,
pangolin_version, pangolin_runDate, PlateToPangolin_days,
nextclade_qcOverallScore, nextclade_qcOverallStatus, nextclade_totalMutations,
nextclade_totalNonACGTNs, nextclade_runDate, PlateToNextclade_days)
View(seq_list)
################################################################################
#       Creation of CDC IVY Upload Dataset for COVID-19 Genetic Sampling       #
#                         Last Updated: 05/18/2021                             #
#                 Code Edited By: Julie (Jules) Gilbert                        #
################################################################################
library(tidyverse)
library(lubridate)
################################################################################
starting_path <- "C:/Users/juliegil/Dropbox (University of Michigan)/MED-LauringLab/"
outputLOC <- paste0(starting_path, "SequenceSampleMetadata/FinalSummary/CDC_IVY_UPLOADS/")
seq_list <- read.csv(paste0(starting_path, "SequenceSampleMetadata/FinalSummary/full_compiled_data.csv"), colClasses = "character")
################################################################################
# for sequencing
#seq_list2 <- filter(seq_list, PlateNumber == "26")
#write.csv(seq_list2, "C:/Users/juliegil/Dropbox (University of Michigan)/MED-LauringLab/ProcessedGenomes/20210519_Nanopore_Run_26/20210519_Nanopore_Run_26.meta.csv", row.names = FALSE, na = "")
seq_list <- seq_list %>% select(sample_id, subject_id, coll_date,
flag, received_source, SiteName, SampleBarcode,
PlateDate, PlatePlatform, PlateNumber,
pangolin_lineage, pangolin_probability, pangolin_status,
pangolin_note, nextclade_clade, nextclade_totalMissing,
nextclade_completeness, gisaid_strain, gisaid_epi_isl,
received_date, position, subject_id_length,
PlateName, PlatePosition, SampleSourceLocation,
pangoLEARN_version, pangolin_conflict, pango_version,
pangolin_version, pangolin_runDate, PlateToPangolin_days,
nextclade_qcOverallScore, nextclade_qcOverallStatus, nextclade_totalMutations,
nextclade_totalNonACGTNs, nextclade_runDate, PlateToNextclade_days)
seq_list <- filter(seq_list, received_source == "CDCIVY")
id_count <- seq_list %>% group_by(sample_id) %>% summarize(count = length(sample_id))
seq_list <- merge(seq_list, id_count, by = c("sample_id"), all.x = TRUE)
dupes <- filter(seq_list, count > 1)
View(seq_list)
id_count <- seq_list %>% group_by(sample_id) %>% summarize(count = length(subject_id))
View(id_count)
################################################################################
#       Creation of CDC IVY Upload Dataset for COVID-19 Genetic Sampling       #
#                         Last Updated: 05/18/2021                             #
#                 Code Edited By: Julie (Jules) Gilbert                        #
################################################################################
library(tidyverse)
library(lubridate)
################################################################################
starting_path <- "C:/Users/juliegil/Dropbox (University of Michigan)/MED-LauringLab/"
outputLOC <- paste0(starting_path, "SequenceSampleMetadata/FinalSummary/CDC_IVY_UPLOADS/")
seq_list <- read.csv(paste0(starting_path, "SequenceSampleMetadata/FinalSummary/full_compiled_data.csv"), colClasses = "character")
################################################################################
# for sequencing
#seq_list2 <- filter(seq_list, PlateNumber == "26")
#write.csv(seq_list2, "C:/Users/juliegil/Dropbox (University of Michigan)/MED-LauringLab/ProcessedGenomes/20210519_Nanopore_Run_26/20210519_Nanopore_Run_26.meta.csv", row.names = FALSE, na = "")
seq_list <- seq_list %>% select(sample_id, subject_id, coll_date,
flag, received_source, SiteName, SampleBarcode,
PlateDate, PlatePlatform, PlateNumber,
pangolin_lineage, pangolin_probability, pangolin_status,
pangolin_note, nextclade_clade, nextclade_totalMissing,
nextclade_completeness, gisaid_strain, gisaid_epi_isl,
received_date, position, subject_id_length,
PlateName, PlatePosition, SampleSourceLocation,
pangoLEARN_version, pangolin_conflict, pango_version,
pangolin_version, pangolin_runDate, PlateToPangolin_days,
nextclade_qcOverallScore, nextclade_qcOverallStatus, nextclade_totalMutations,
nextclade_totalNonACGTNs, nextclade_runDate, PlateToNextclade_days)
seq_list <- filter(seq_list, received_source == "CDCIVY")
length(unique(seq_list$sample_id))
################################################################################
#       Creation of CDC IVY Upload Dataset for COVID-19 Genetic Sampling       #
#                         Last Updated: 05/18/2021                             #
#                 Code Edited By: Julie (Jules) Gilbert                        #
################################################################################
library(tidyverse)
library(lubridate)
################################################################################
starting_path <- "C:/Users/juliegil/Dropbox (University of Michigan)/MED-LauringLab/"
outputLOC <- paste0(starting_path, "SequenceSampleMetadata/FinalSummary/CDC_IVY_UPLOADS/")
seq_list <- read.csv(paste0(starting_path, "SequenceSampleMetadata/FinalSummary/full_compiled_data.csv"), colClasses = "character")
################################################################################
# for sequencing
#seq_list2 <- filter(seq_list, PlateNumber == "26")
#write.csv(seq_list2, "C:/Users/juliegil/Dropbox (University of Michigan)/MED-LauringLab/ProcessedGenomes/20210519_Nanopore_Run_26/20210519_Nanopore_Run_26.meta.csv", row.names = FALSE, na = "")
seq_list <- seq_list %>% select(sample_id, subject_id, coll_date,
flag, received_source, SiteName, SampleBarcode,
PlateDate, PlatePlatform, PlateNumber,
pangolin_lineage, pangolin_probability, pangolin_status,
pangolin_note, nextclade_clade, nextclade_totalMissing,
nextclade_completeness, gisaid_strain, gisaid_epi_isl,
received_date, position, subject_id_length,
PlateName, PlatePosition, SampleSourceLocation,
pangoLEARN_version, pangolin_conflict, pango_version,
pangolin_version, pangolin_runDate, PlateToPangolin_days,
nextclade_qcOverallScore, nextclade_qcOverallStatus, nextclade_totalMutations,
nextclade_totalNonACGTNs, nextclade_runDate, PlateToNextclade_days)
seq_list <- filter(seq_list, received_source == "CDCIVY")
length(unique(seq_list$sample_id))
View(seq_list)
################################################################################
#       Creation of CDC IVY Upload Dataset for COVID-19 Genetic Sampling       #
#                         Last Updated: 05/18/2021                             #
#                 Code Edited By: Julie (Jules) Gilbert                        #
################################################################################
library(tidyverse)
library(lubridate)
################################################################################
starting_path <- "C:/Users/juliegil/Dropbox (University of Michigan)/MED-LauringLab/"
outputLOC <- paste0(starting_path, "SequenceSampleMetadata/FinalSummary/CDC_IVY_UPLOADS/")
seq_list <- read.csv(paste0(starting_path, "SequenceSampleMetadata/FinalSummary/full_compiled_data.csv"), colClasses = "character")
################################################################################
# for sequencing
seq_list2 <- filter(seq_list, PlateNumber == "27")
View(seq_list2)
write.csv(seq_list2, "C:/Users/juliegil/Dropbox (University of Michigan)/MED-LauringLab/ProcessedGenomes/20210524_Nanopore_Run_27/20210524_Nanopore_Run_27.meta.csv", row.names = FALSE, na = "")
